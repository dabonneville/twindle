# for use with http://dataset.rtfd.org

common:
  database: 'postgresql://localhost/spon_twitter'
  prefix: 'export'
  format: csv

exports:
  # Nach tag:
  # SELECT t.tag, COUNT(s.id) FROM status s LEFT JOIN tag t ON t.status_id = s.id GROUP BY t.tag; 

  - query: >
      SELECT t.tag, to_char(s.created_at, 'YYYY-MM-DD') AS day, COUNT(s.id)
        FROM status s LEFT JOIN tag t ON t.status_id = s.id
        WHERE t.category = 'Parteien'
        GROUP BY t.tag, day ORDER BY day, t.tag;
    filename: parteien.csv

  - query: >
      SELECT t.tag, to_char(s.created_at, 'YYYY-MM-DD') AS day, COUNT(s.id)
        FROM status s LEFT JOIN tag t ON t.status_id = s.id
        WHERE t.category = 'Themen'
        GROUP BY t.tag, day ORDER BY day, t.tag;
    filename: themen.csv

  # German hashtags
  - filename: hashtags_de.csv
    query: >
      SELECT h.text, COUNT(*) FROM hashtags h LEFT JOIN status s ON h.status_id = s.id
      WHERE s.lang = 'de' GROUP BY h.text ORDER BY COUNT(*) DESC LIMIT 20; 

  - filename: parteien_laender.csv
    query: >
      SELECT d.tag, d.state, d.cnt, (d.cnt/s.total)*100 AS pct FROM 
          (SELECT t.tag AS tag, l.state AS state, COUNT(DISTINCT s.id)::float AS cnt FROM status s
              LEFT JOIN tag t ON t.status_id = s.id
              LEFT JOIN "user" u ON u.id = s.user_id
              LEFT JOIN locations l ON l.location = u.location
              WHERE l.country_code = 'de' AND t.category = 'Parteien'
              AND l.state IS NOT NULL
              GROUP BY t.tag, l.state) AS d
          LEFT JOIN (SELECT ls.state AS state, COUNT(*)::float as total FROM locations ls WHERE ls.country_code = 'de' GROUP BY ls.state) as s
              ON d.state = s.state
          ORDER BY pct DESC;

  #### Produktiv-Abfragen
  - filename: parteien_erwaehnung_woche.csv
    format: csv
    query: >
      SELECT t.tag, COUNT(s.id)
        FROM status s LEFT JOIN tag t ON t.status_id = s.id
        WHERE t.category = 'Parteien'
          AND s.created_at > CURRENT_DATE - INTERVAL '1 WEEK'
        GROUP BY t.tag;

  - filename: parteien_erwaehnung_woche.json
    format: tabson
    query: >
      SELECT t.tag, COUNT(s.id)
        FROM status s LEFT JOIN tag t ON t.status_id = s.id
        WHERE t.category = 'Parteien'
          AND s.created_at > CURRENT_DATE - INTERVAL '1 WEEK'
        GROUP BY t.tag;

  - filename: parteien_erwaehnung_zeitreihe.csv
    format: csv
    query: >
      SELECT t.tag, to_char(s.created_at, 'YYYY-MM-DD') AS day, COUNT(s.id)
        FROM status s LEFT JOIN tag t ON t.status_id = s.id
        WHERE t.category = 'Parteien'
          AND s.created_at > CURRENT_DATE - INTERVAL '4 WEEKS'
        GROUP BY t.tag, to_char(s.created_at, 'YYYY-MM-DD');

  - filename: parteien_erwaehnung_zeitreihe.json
    format: tabson
    query: >
      SELECT t.tag, to_char(s.created_at, 'YYYY-MM-DD') AS day, COUNT(s.id)
        FROM status s LEFT JOIN tag t ON t.status_id = s.id
        WHERE t.category = 'Parteien'
          AND s.created_at > CURRENT_DATE - INTERVAL '4 WEEKS'
        GROUP BY t.tag, to_char(s.created_at, 'YYYY-MM-DD');

  - filename: personen_erwaehnung_woche.csv
    format: csv
    query: >
      SELECT t.tag, COUNT(s.id)
        FROM status s LEFT JOIN tag t ON t.status_id = s.id
        WHERE t.category = 'Personen'
          AND s.created_at > CURRENT_DATE - INTERVAL '1 WEEK'
        GROUP BY t.tag;

  - filename: personen_erwaehnung_woche.json
    format: tabson
    query: >
      SELECT t.tag, COUNT(s.id)
        FROM status s LEFT JOIN tag t ON t.status_id = s.id
        WHERE t.category = 'Personen'
          AND s.created_at > CURRENT_DATE - INTERVAL '1 WEEK'
        GROUP BY t.tag;

  - filename: personen_erwaehnung_zeitreihe.csv
    format: csv
    query: >
      SELECT t.tag, to_char(s.created_at, 'YYYY-MM-DD') AS day, COUNT(s.id)
        FROM status s LEFT JOIN tag t ON t.status_id = s.id
        WHERE t.category = 'Personen'
          AND s.created_at > CURRENT_DATE - INTERVAL '4 WEEKS'
        GROUP BY t.tag, to_char(s.created_at, 'YYYY-MM-DD');

  - filename: personen_erwaehnung_zeitreihe.json
    format: tabson
    query: >
      SELECT t.tag, to_char(s.created_at, 'YYYY-MM-DD') AS day, COUNT(s.id)
        FROM status s LEFT JOIN tag t ON t.status_id = s.id
        WHERE t.category = 'Personen'
          AND s.created_at > CURRENT_DATE - INTERVAL '4 WEEKS'
        GROUP BY t.tag, to_char(s.created_at, 'YYYY-MM-DD');

  - filename: bundestagsabgeordnete_aktivitaet.csv
    format: csv
    query: >
      SELECT l.screen_name, l.user_id, COUNT(DISTINCT s.id) as tweets, COUNT(r.id) AS retweeted
          FROM lists l
          LEFT JOIN status s ON s.user_id = l.user_id
          LEFT JOIN status r ON r.retweeted_status_id = s.id
          WHERE l.list_name = 'bundestagsabgeordnete'
            AND s.created_at > CURRENT_DATE - INTERVAL '1 WEEK'
          GROUP BY l.screen_name, l.user_id
          ORDER BY COUNT(r.id) DESC;

  - filename: bundestagsabgeordnete_aktivitaet.json
    format: tabson
    query: >
      SELECT l.screen_name, l.user_id, COUNT(DISTINCT s.id) as tweets, COUNT(r.id) AS retweeted
          FROM lists l
          LEFT JOIN status s ON s.user_id = l.user_id
          LEFT JOIN status r ON r.retweeted_status_id = s.id
          WHERE l.list_name = 'bundestagsabgeordnete'
            AND s.created_at > CURRENT_DATE - INTERVAL '1 WEEK'
          GROUP BY l.screen_name, l.user_id
          ORDER BY COUNT(r.id) DESC;

  - filename: politikertreppe_aktivitaet.csv
    format: csv
    query: >
      SELECT l.screen_name, l.user_id, COUNT(DISTINCT s.id) as tweets, COUNT(r.id) AS retweeted
          FROM lists l
          LEFT JOIN status s ON s.user_id = l.user_id
          LEFT JOIN status r ON r.retweeted_status_id = s.id
          WHERE l.list_name = 'Politikertreppe'
            AND s.created_at > CURRENT_DATE - INTERVAL '1 WEEK'
          GROUP BY l.screen_name, l.user_id
          ORDER BY COUNT(r.id) DESC;

  - filename: politikertreppe_aktivitaet.json
    format: tabson
    query: >
      SELECT l.screen_name, l.user_id, COUNT(DISTINCT s.id) as tweets, COUNT(r.id) AS retweeted
          FROM lists l
          LEFT JOIN status s ON s.user_id = l.user_id
          LEFT JOIN status r ON r.retweeted_status_id = s.id
          WHERE l.list_name = 'Politikertreppe'
            AND s.created_at > CURRENT_DATE - INTERVAL '1 WEEK'
          GROUP BY l.screen_name, l.user_id
          ORDER BY COUNT(r.id) DESC;
